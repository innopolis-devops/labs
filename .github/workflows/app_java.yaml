name: app_java

on:
  push:
    paths:
      - 'app_java/**'
      - '.github/workflows/app_java.yml'

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: "./app_java"

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**./app_java/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots package

  push:

    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: "./app_java"

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./app_java
          file: ./app_java/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/app_java:latest

  snyk:

    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: "./app_java"
    steps:
      - uses: actions/checkout@master
      - uses: snyk/actions/setup@master
      - uses: snyk/actions/maven@master
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**./app_java/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Run Snyk to check for vulnerabilities
        continue-on-error: true # To make sure that SARIF upload gets called
        run: |
          snyk auth ${{ secrets.SNYK_TOKEN }}
          snyk test --all-projects --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ./app_java/snyk.sarif