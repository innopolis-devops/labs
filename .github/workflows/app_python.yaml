name: app_python

on:
  push:
    paths:
      - "app_python/**"
      - ".github/workflows/app_python.yaml"
env:
  REGISTRY: dockerhub.com
  IMAGE_NAME: "app_python"
  TAG: "latest"

jobs:
  dependences:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Cache pip
        uses: actions/cache@v2
        id:   cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('app_python/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          pip install -r app_python/requirements-dev.txt -r app_python/requirements.txt
  lint:
    runs-on: ubuntu-latest
    needs:
      - dependences
    steps:
      - uses: actions/checkout@v2
      - name: Cache pip
        uses: actions/cache@v2
        id:   cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('app_python/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          pip install -r app_python/requirements-dev.txt -r app_python/requirements.txt
      - name: Python lint
        if: always()
        run: |
          pylint app_python

  test:
    runs-on: ubuntu-latest
    needs:
      - dependences
    steps:
      - uses: actions/checkout@v2
      - name: Cache pip
        uses: actions/cache@v2
        id:   cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('app_python/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          pip install -r app_python/requirements-dev.txt -r app_python/requirements.txt
      - name: test
        run: |
          pytest
  
  build:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - id: vars
        run: echo "::set-output name=tagname::$(git rev-parse --short HEAD)"
      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v3
        with:
          context: app_python/
          file: app_python/Dockerfile
          push: true
          tags: ${{secrets.DOCKER_HUB_USERNAME}}/$IMAGE_NAME:$TAG
          cache-from: type=registry,ref=${{secrets.DOCKER_HUB_USERNAME}}/$IMAGE_NAME:$TAG
          cache-to: type=inline