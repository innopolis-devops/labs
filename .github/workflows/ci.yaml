name: ci

on: [push]

env:
  REGISTRY: justmark0

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install pylint pytest
          pip install --upgrade pip poetry==1.1.11 && poetry config virtualenvs.create false
          cd app_python
          poetry install
      - name: Lint code
        run: |
          pylint $(git ls-files '*.py')
        continue-on-error: true
      - name: Test code
        run: |
          pytest
  production:
    needs: [ "build" ]
    name: Push Image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_KEY }}

      - name: Set up Docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/devopsiu:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/devopsiu:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/devopsiu:buildcache,mode=max

      - name: Check vulnerabilities
        uses: snyk/actions/python-3.8@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
