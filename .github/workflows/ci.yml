name: ci

on: [push]

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      python: ${{ steps.filter.outputs.python }}
      javascript: ${{ steps.filter.outputs.javascript }}
    steps:
      # For pull requests it's not necessary to checkout the code
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            python:
              - 'app_python/**'
            frontend:
              - 'app_javascript/**'

  linting_and_testing_python:
    needs: changes
    if: ${{ needs.changes.outputs.python == 'true' }}
    runs-on: ubuntu-latest
    env:
      working_dir: app_python
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pipenv
        run: python -m pip install --upgrade pipenv wheel
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Install dependencies
        run: cd ${{ env.working_dir }} && pipenv install --deploy --dev
      - name: Lint with flake8
        run: cd ${{ env.working_dir }} && pipenv run -v flake8
        continue-on-error: true
      - name: Test with pytest
        run: cd ${{ env.working_dir }} && pipenv run -v test

  push_to_registry_python:
    needs: ["linting_and_testing_python", "changes"]
    if: ${{ needs.changes.outputs.python == 'true' }}
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    env:
      REGISTRY: k05m0navt
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./app_python
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.event.repository.name }}:python
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Run Trivy vulnerability scanner python
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ github.event.repository.name }}:python
          format: "table"
      - name: Run Trivy vulnerability scanner javascript
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ github.event.repository.name }}:javascript
          format: "table"

  linting_and_testing_javascript:
    needs: changes
    if: ${{ needs.changes.outputs.javascript == 'true' }}
    runs-on: ubuntu-latest
    env:
      working_dir: app_javascript
    strategy:
      matrix:
        node-version: [16.18.1]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: cd ${{ env.working_dir }} && npm install
        continue-on-error: true
      - name: Test with mocha
        run: cd ${{ env.working_dir }} && npm test

  push_to_registry_javascript:
    needs: ["linting_and_testing_javascript", "changes"]
    if: ${{ needs.changes.outputs.javascript == 'true' }}
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    env:
      REGISTRY: k05m0navt
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./app_javascript
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.event.repository.name }}:javascript
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
