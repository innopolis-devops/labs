name: Python package

on:
  push:
    branches:
      - master
      - lab*
    paths:
      - 'app_python/**'
      - '.github/workflows/python-package.yml'
  pull_request:
    branches:
      - master
    paths:
      - 'app_python/**'
      - '.github/workflows/python-package.yml'

defaults:
  run:
    working-directory: app_python

jobs:
  lint:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Black linter for python
        uses: psf/black@stable
        with:
          options: "--check --verbose"
          src: "app_python"
  test:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r app_python/requirements.txt
      - name: Run tests with pytest
        run: |
          pytest .
  security:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - uses: actions/checkout@master
      - uses: snyk/actions/setup@master
      - name: Run Snyk to check for vulnerabilities
        continue-on-error: true
        run: snyk test --sarif-file-output=snyk.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: app_python/snyk.sarif
  docker:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          context: app_python
          file: app_python/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/simple_python_app_v2:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max