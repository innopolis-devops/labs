name: Build

on:
  push:
    branches: 
      - master
  pull_request:
    branches: 
      - master
      - lab*
    paths:
      - app_python/**
      - .github/workflows/python.yml

defaults:
  run:
    working-directory: app_python

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #                check-out repo
      #----------------------------------------------
      - uses: actions/checkout@v2

      #----------------------------------------------
      #  lint with black, markdownlint and hadolint
      #----------------------------------------------
      - uses: psf/black@stable
        name: Black lint
        with:
          options: "--check --verbose"
          src: "app_python/src"
          version: "22.6.0"

      - uses: docker://avtodev/markdown-lint:v1
        name: Markdown lint
        with:
          rules: '/.markdownlint.json'

      - uses: hadolint/hadolint-action@v1.5.0
        name: Dockerfile lint
        with:
          dockerfile: 'app_python/Dockerfile'
  

  # 
  test:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      #----------------------------------------------
      #          install & configure poetry
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: currenttime-venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('app_python/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        run: poetry install --no-interaction
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest .
