name: Python application

on:
  push:
      branches:
        - master
  pull_request:
    paths:
      - app_python/**
      - .github/workflows/python.yml

jobs:

  linters:
    name: "Linters"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - name: "Markdown file"
        uses: docker://avtodev/markdown-lint:v1
        with:
          config: "lint/markdown.json"
          args: "./app_python"
      - name: "Dockerfile"
        uses: hadolint/hadolint-action@v1.5.0
        with:
          dockerfile: app_python/Dockerfile
      - name: "Python"
        uses: quentinguidee/pep8-action@v1

  changes:
      name: "Changes"
      runs-on: ubuntu-latest
      outputs:
        python: ${{ steps.filter.outputs.python }}
      steps:
        - uses: actions/checkout@v2
        - uses: dorny/paths-filter@v2
          id: filter
          with:
            filters: |
              python:
                - app_python

  test-python:
    needs: [changes]
    name: "Python tests"
    timeout-minutes: 5
    # if: ${{ needs.changes.outputs.python == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app_python
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
          cache: "pip"
      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: "Run python tests"
        run: |
          pytest

  snyk:
    name: Snyk
    runs-on: ubuntu-latest
    timeout-minutes: 5
    defaults:
      run:
        working-directory: app_python
    steps:
      - uses: actions/checkout@v3
      - uses: snyk/actions/setup@master
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: "Packages"
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Check for vulnerabilities
        run: snyk test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  publish:
    needs: [linters, test-python]
    name: "Publish image"
    timeout-minutes: 5
    # if: ${{ needs.changes.outputs.python == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:app_python"
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tttime:latest
