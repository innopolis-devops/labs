name: Rust CI/CD

on:
  push:
    branches: 
      - master
    tags:
  pull_request:
    branches: 
      - master
      - lab*
    paths:
      - app_rust/**
      - .github/workflows/rust.yml

defaults:
  run:
    working-directory: app_rust

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: sevenzing/currenttime-rust

jobs:
  test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true

      - name: cargo test
        run: RUST_BACKTRACE=1 RUST_LOG=info cargo test --locked -- --nocapture

  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt, clippy
          override: true

      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true

      - name: cargo fmt
        run: cargo fmt --all -- --check --config imports_granularity=Crate

      - name: cargo clippy
        run: cargo clippy --all --all-features -- -D warnings

  push:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      #----------------------------------------------
      #              check-out repo
      #----------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v2
      #----------------------------------------------
      #         Login to docker registry
      #----------------------------------------------
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      #----------------------------------------------
      #         Extract tags, branch names
      #----------------------------------------------
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      #----------------------------------------------
      #       Push (if taged) to docker registry
      #----------------------------------------------
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: app_rust
          push: ${{ github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
