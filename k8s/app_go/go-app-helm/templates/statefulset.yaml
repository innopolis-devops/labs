apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "go-app-helm.fullname" . }}
  labels:
    {{- include "go-app-helm.labels" . | nindent 4 }}
spec:
  serviceName: {{ .Values.serviceName }}
  podManagementPolicy: "Parallel"
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "go-app-helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "go-app-helm.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "go-app-helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 2222
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            { { include "go-app-helm.environments" . | nindent 12 } }
          volumeMounts:
            - name: { { .Values.volumes.config.name } }
              mountPath: { { .Values.volumes.config.mountPath } }
              subPath: config.json
            - name: { { .Values.volumes.persistent.name } }
              mountPath: { { .Values.volumes.persistent.mountPath } }
      volumes:
        - name: { { .Values.volumes.config.name } }
          configMap:
            name: { { include "go-app-helm.fullname" . } }-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: { { .Values.volumes.persistent.name } }
      { { - with .Values.volumes.persistent.spec } }
      spec:
        { { - toYaml . | nindent 8 } }
      { { - end } }
