apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "baka.fullname" . }}
  labels:
    {{- include "baka.labels" . | nindent 4 }}
spec:
  podManagementPolicy: "Parallel"
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  serviceName: {{ .Values.serviceName }}
  selector:
    matchLabels:
      {{- include "baka.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "baka.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "baka.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: download
          image: busybox:1.28
          command:
            - wget
            - "-O"
            - "/workdir/index.html"
            - "http://info.cern.ch/"
          volumeMounts:
            - name: app-python-workdir-volume
              mountPath: /workdir
        - name: hello1
          image: busybox:1.28
          command:
            - "sh"
            - "-c"
            - "echo 'Hello from init container 1' > /workdir/hello.txt"
          volumeMounts:
            - name: app-python-workdir-volume
              mountPath: /workdir
        -   name: hello2
          image: busybox:1.28
          command:
            - "sh"
            - "-c"
            - "echo 'Hello from init container 2' >> /workdir/hello.txt"
          volumeMounts:
            - name: app-python-workdir-volume
              mountPath: /workdir
        -   name: hello3
          image: busybox:1.28
          command:
            - "sh"
            - "-c"
            - "echo 'Hello from init container 3' >> /workdir/hello.txt"
          volumeMounts:
            - name: app-python-workdir-volume
              mountPath: /workdir
        dnsPolicy: Default
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: { { .Values.volumes.config.name } }
              mountPath: { { .Values.volumes.config.mountPath } }
              subPath: { { .Values.volumes.config.subPath } }
            - name: { { .Values.volumes.persistent.name } }
              mountPath: { { .Values.volumes.persistent.mountPath } }
            - name: app-python-workdir-volume
              mountPath: /workdir
          env:
            - name: MY_PASS
              valueFrom:
                secretKeyRef:
                  name: mypassword
                  key: MY_PASS
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 30
            httpGet:
              path: /
              port: http
          readinessProbe:
            initialDelaySeconds: 30
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      volumes:
        - name: {{ .Values.volumes.config.name }}
          configMap:
            name: config-file
        - name: app-python-workdir-volume
          configMap:
            name: { { include "app-python-chart.fullname" . } }-workdir

  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.volumes.persistent.name }}
      {{- with .Values.volumes.persistent.spec }}
      spec:
        {{- toYaml . | nindent 8 }}
      {{- end }}


    - metadata:
        name: app-python-workdir-volume
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 256Mi