apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: { { include "my-app-python.fullname" . } }
  labels:
    { { - include "my-app-python.labels" . | nindent 4 } }
spec:
  podManagementPolicy: "Parallel"
  { { - if not .Values.autoscaling.enabled } }
  replicas: { { .Values.replicaCount } }
  { { - end } }
  serviceName: {{ .Values.serviceName }}
  selector:
    matchLabels:
      { { - include "my-app-python.selectorLabels" . | nindent 6 } }
  template:
    metadata:
      { { - with .Values.podAnnotations } }
      annotations:
        { { - toYaml . | nindent 8 } }
      { { - end } }
      labels:
        { { - include "my-app-python.selectorLabels" . | nindent 8 } }
    spec:
      { { - with .Values.imagePullSecrets } }
      imagePullSecrets:
        { { - toYaml . | nindent 8 } }
      { { - end } }
      serviceAccountName: { { include "my-app-python.serviceAccountName" . } }
      securityContext:
        { { - toYaml .Values.podSecurityContext | nindent 8 } }
      containers:
        - name: { { .Chart.Name } }
          securityContext:
            { { - toYaml .Values.securityContext | nindent 12 } }
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: { { .Values.image.pullPolicy } }
          env:
            - name: MY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: credential
                  key: password
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 30
            httpGet:
              path: /health
              port: http
          readinessProbe:
            initialDelaySeconds: 30
            httpGet:
              path: /health
              port: http
          resources:
            { { - toYaml .Values.resources | nindent 12 } }
          volumeMounts:
            - name: {{ .Values.volumes.config.name }}
              mountPath: {{ .Values.volumes.config.mountPath }}
              subPath: {{ .Values.volumes.config.subPath }}
            - name: {{ .Values.volumes.persistent.name }}
              mountPath: {{ .Values.volumes.persistent.mountPath }}
      volumes:
        - name: {{ .Values.volumes.config.name }}
          configMap:
            name: {{ include "my-app-python.fullname" . }}-config

      {{- with .Values.nodeSelector }}
      nodeSelector:
        { { - toYaml . | nindent 8 } }
      { { - end } }
      { { - with .Values.affinity } }
      affinity:
        { { - toYaml . | nindent 8 } }
      { { - end } }
      { { - with .Values.tolerations } }
      tolerations:
        { { - toYaml . | nindent 8 } }
      { { - end } }
    volumeClaimTemplates:
      - metadata:
          name: { { .Values.volumes.persistent.name } }
        { { - with .Values.volumes.persistent.spec } }
        spec:
          { { - toYaml . | nindent 8 } }
        { { - end } }