version: '3.9'

x-logs: &logs
  logging:
    driver: "json-file"
    options:
      max-size: "80m"
      max-file: "20"
      tag: "{{.ImageName}}|{{.Name}}"

services:

  app_python:
    <<: *logs
    image: whutao/app_python:latest
    ports:
      - '5050:8080'
    expose:
      - 5050
    networks:
      - app_python
      - monitoring
    restart: always
    healthcheck:
      test: wget -nv -t1 --spider 'http://localhost:8000/status' || exit 1
      interval: 1m
      timeout: 10s

  app_swift:
    <<: *logs
    image: whutao/app_swift:latest
    ports:
      - '5051:8080'
    expose:
      - 5051

  loki:
    <<: *logs
    image: grafana/loki:2.6.1
    ports:
      - '3100:3100'
    expose:
      - 3100
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=3 --spider http://localhost:3100/ready || exit 1"]
    networks:
      - monitoring

  promtail:
    <<: *logs
    image: grafana/promtail:2.6.1
    ports:
      - "9080:9080"
    expose:
      - 9080
    restart: unless-stopped
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - promtail-data:/var/lib/promtail/positions
      - ${PWD}/promtail/promtail.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    labels:
      org.label-schema.group: "monitoring"
    networks:
      - app_python
      - monitoring

  grafana:
    <<: *logs
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    expose:
      - 3000
    volumes:
      - ${PWD}/grafana/provisioning/datasources/loki.yml:/etc/grafana/provisioning/datasources/loki_ds.yml
      - ${PWD}/grafana/provisioning/datasources/prometheus.yml:/etc/grafana/provisioning/datasources/prometheus_ds.yml
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=3 --spider http://localhost:3000/api/health || exit 1"]
    networks:
      - monitoring

  prometheus:
    <<: *logs
    image: prom/prometheus:v2.39.1
    volumes:
      - ${PWD}/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    restart: always
    networks:
     - app_python
     - monitoring
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=3 --spider http://localhost:9090/-/healthy || exit 1"]

networks:
  app_python: { }
  monitoring: { }

volumes:
  loki-data: {}
  grafana-data: {}
  promtail-data: {}
  prometheus-data: {}
